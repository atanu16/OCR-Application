Dim objOutlook, objNamespace, objInbox, objItems, objMail
Dim objAttachments, latestMail, objFSO, savePath, searchText

' Define the search text
searchText = "find the attached fda"

' Create Outlook object
Set objOutlook = CreateObject("Outlook.Application")
Set objNamespace = objOutlook.GetNamespace("MAPI")
Set objInbox = objNamespace.GetDefaultFolder(6) ' 6 refers to Inbox

' Get all emails and sort by ReceivedTime (latest first)
Set objItems = objInbox.Items
objItems.Sort "[ReceivedTime]", True  

' Loop through emails to find the latest one containing the specific text
For Each objMail In objItems
    If objMail.Class = 43 Then ' Ensure it is a MailItem
        ' Check if email body contains the search text (case-insensitive)
        If InStr(1, objMail.Body, searchText, vbTextCompare) > 0 Then
            Set latestMail = objMail
            Exit For ' Stop at the first (latest) matching email
        End If
    End If
Next

' Check if a matching email was found and has attachments
If Not latestMail Is Nothing And latestMail.Attachments.Count > 0 Then
    ' Create folder if it doesn't exist
    Set objFSO = CreateObject("Scripting.FileSystemObject")
    savePath = "C:\Attachments\" ' Change this to your desired folder
    If Not objFSO.FolderExists(savePath) Then objFSO.CreateFolder savePath

    ' Save attachments
    Set objAttachments = latestMail.Attachments
    For Each objAttachment In objAttachments
        objAttachment.SaveAsFile savePath & objAttachment.FileName
    Next
    MsgBox "Attachments from the latest matching email saved to " & savePath, vbInformation, "Success"
Else
    MsgBox "No recent matching emails with attachments found.", vbExclamation, "No Attachments"
End If

' Cleanup
Set objOutlook = Nothing
Set objNamespace = Nothing
Set objInbox = Nothing
Set objItems = Nothing
Set objMail = Nothing
Set objAttachments = Nothing
Set objFSO = Nothing